set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim' 
Plugin 'itchyny/lightline.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
" Plugin 'terryma/vim-multiple-cursors'
" Plugin 'tomasr/molokai'
Plugin 'wombat256.vim'
Plugin 'sjl/gundo.vim'
Plugin 'kien/ctrlp.vim'

call vundle#end()

filetype plugin indent on

" normal backspace behaviour
set backspace=2

" enable syntax processing
syntax enable

"UI Config
set softtabstop=4       " number of spaces in tab when editing
set expandtab           " tabs are spaces
set number              " show line numbers
set showcmd             " show command in bottom bar
set cursorline          " highlight current line
set wildmenu            " visual autocomplete for command menu
set lazyredraw          " redraw only when we need to.

" Theme
syntax on
set t_Co=256
color wombat256mod

" set line at 80 chars
highlight ColorColumn ctermbg=236
set colorcolumn=80

" Searching
set showmatch           " highlight matching [{()}]
set incsearch           " search as characters are entered
set hlsearch            " highlight matches

" Folding
set foldenable          " enable folding
set foldlevelstart=10   " open most folds by default
set foldnestmax=10      " 10 nested fold max

" space open/closes folds
nnoremap <space> za    
set foldmethod=indent   " fold based on indent level

" Movement
" move vertically by visual line
nnoremap j gj
nnoremap k gk
" highlight last inserted text
nnoremap gV `[v`]

" Leader Shortcuts
let mapleader=","       " leader is comma
" toggle gundo
" nnoremap <leader>u :GundoToggle<CR>
" save session
nnoremap <leader>s :mksession<CR>

" CtrlP settings
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'

" nerd-tree toggle
map <C-n> :NERDTreeToggle<CR>
let g:NERDTreeDirArrowExpandable="+"
let g:NERDTreeDirArrowCollapsible="~"
" ignore temp files in NERDTree
let NERDTreeIgnore=['\.pyc$', '\~$'] 
let NERDTreeMapOpenInTab='\r'

" PEP8
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix |

au BufNewFile,BufRead *.js,*.html,*.css
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2 |

" Flagging Unnecessary Whitespace
highlight BadWhitespace ctermbg=red guibg=darkred
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

" UTF8 Support
set encoding=utf-8

" System clipboard
set clipboard=unnamed

" map save to ,s
noremap <leader>s :update<CR>

" map quit to ,q
noremap <leader>q :quit<CR>
noremap <leader>Q :qa!<CR>

" easier moving between tabs
map <Leader>n <esc>:tabprevious<CR>
map <Leader>m <esc>:tabnext<CR>
map <leader>t <esc>:tabnew<CR>

" Move code blocks
vnoremap < <gv
vnoremap > >gv

" Format paragraph
vmap Q gq
nmap Q gqap

" map sort function to ,s
vnoremap <leader>s :sort<CR>

" lightline start
set laststatus=2

" MY CUSTOM STUFF

" auto replace word in normal mode
nnoremap <leader>r *``cgn
" auto replace selection in visual mode
vnoremap <leader>r y/<C-R>"<CR>``cgn
" clear highlighted text on escape
nnoremap \\ :noh<return>
" write session
nnoremap <leader>S :mksession! ~/vim_session <CR>
" load session
nnoremap <leader>L :source ~/vim_session <CR>
